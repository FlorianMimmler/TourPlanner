<UserControl x:Class="TourPlanner.PresentationLayer.View.Subviews.Tour.TourInputFormView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TourPlanner.PresentationLayer.View.Subviews.Tour"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <Style TargetType="TextBox">
            <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
            <Setter Property="Background" Value="{DynamicResource ContentAreaBrushLight}"/>
            <Setter Property="Foreground" Value="{DynamicResource ControlDarkColor}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            Padding="{TemplateBinding Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                                                (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#bdc3c7" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                                                (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#7f8c8d" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Hover Effect -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlMediumBrush}"/>
                                <!-- Slightly darker blue -->
                            </Trigger>
                            <!-- Pressed Effect -->
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlMediumBrush}"/>
                            </Trigger>
                            <!-- Disabled Effect -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource DisabledControlBrushLight}"/>
                                <!-- Gray when disabled -->
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <StackPanel Grid.Row="1" Orientation="Vertical" Margin="5 10 5 0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" Margin="0 0 20 0">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"></ColumnDefinition>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" FontSize="16">Name:</TextBlock>
                        <TextBox 
                            x:Name="TourNameInput" 
                            Text="{Binding TourName, UpdateSourceTrigger=PropertyChanged}" 
                            Grid.Column="2" 
                            MaxLength="144"
                            MinWidth="120"/>
                    </Grid>
                    <Label Height="28" Grid.Row="1" Content="{Binding ElementName=TourNameInput, Path=(Validation.Errors)[0].ErrorContent}" Foreground="Red" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Top"></Label>
                </Grid>
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="180"></ColumnDefinition>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" FontSize="16">Transport Type:</TextBlock>
                        <ComboBox 
                            MinWidth="80" 
                            x:Name="TransportTypeInput" 
                            SelectedItem="{Binding SelectedTransportType, UpdateSourceTrigger=PropertyChanged}" 
                            ItemsSource="{Binding TransportTypes}" 
                            Grid.Column="2" 
                            FontSize="14" 
                            Padding="2">
                        </ComboBox>
                    </Grid>
                    <Label Content="{Binding ElementName=TransportTypeInput, Path=(Validation.Errors)[0].ErrorContent}" Foreground="Red" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Top"></Label>
                </Grid>
            </Grid>

            <StackPanel Orientation="Vertical">
                <TextBlock FontSize="16">Description:</TextBlock>
                <TextBox 
                    x:Name="DescriptionInput" 
                    Text="{Binding TourDescription, UpdateSourceTrigger=PropertyChanged}" 
                    TextWrapping="Wrap" 
                    AcceptsReturn="True" 
                    MinHeight="50" 
                    MaxLength="500"/>
                <Label Height="28" Content="{Binding ElementName=DescriptionInput, Path=(Validation.Errors)[0].ErrorContent}" Foreground="Red" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Top"></Label>
            </StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="0 0 20 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"></ColumnDefinition>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" FontSize="16">From:</TextBlock>
                        <TextBox 
                            x:Name="FromInput" 
                            Text="{Binding From, UpdateSourceTrigger=PropertyChanged}" 
                            Grid.Column="2"
                            MaxLength="144"/>
                    </Grid>
                    <Label Height="28" Grid.Row="1" Content="{Binding ElementName=FromInput, Path=(Validation.Errors)[0].ErrorContent}" Foreground="Red" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 0 0 5"></Label>
                    <Grid Grid.Row="2" Margin="0 0 20 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"></ColumnDefinition>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" FontSize="16">To:</TextBlock>
                        <TextBox 
                            x:Name="ToInput" 
                            Text="{Binding To, UpdateSourceTrigger=PropertyChanged}" 
                            Grid.Column="2" 
                            MaxLength="144"
                            MinWidth="120"/>
                    </Grid>
                    <Label Height="28" Grid.Row="3" Content="{Binding ElementName=ToInput, Path=(Validation.Errors)[0].ErrorContent}" Foreground="Red" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Top"></Label>
                </Grid>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="180"></ColumnDefinition>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" FontSize="16">Distance (km):</TextBlock>
                        <TextBox 
                            x:Name="DistanceInput" 
                            Grid.Column="2" 
                            MaxLength="64"
                            Text="{Binding Distance, UpdateSourceTrigger=PropertyChanged}"
                            PreviewTextInput="DistanceTextBox_PreviewTextInput"
                            LostFocus="DistanceTextBox_LostFocus"
                            MinWidth="80"/>
                    </Grid>
                    <Label Height="28" Grid.Row="1" Content="{Binding ElementName=DistanceInput, Path=(Validation.Errors)[0].ErrorContent}" Foreground="Red" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 0 0 5"></Label>
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="180"></ColumnDefinition>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" FontSize="16">Estimated Time (HH:mm):</TextBlock>
                        <TextBox 
                            x:Name="EstimatedTimeInput" 
                            Grid.Column="2"  
                            MaxLength="64"
                            Text="{Binding EstimatedTime, UpdateSourceTrigger=PropertyChanged}"
                            PreviewTextInput="TimeTextBox_PreviewTextInput"
                            MinWidth="80"/>
                    </Grid>
                    <Label Height="28" Grid.Row="3" Content="{Binding ElementName=EstimatedTimeInput, Path=(Validation.Errors)[0].ErrorContent}" Foreground="Red" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Top"></Label>
                </Grid>
            </Grid>

        </StackPanel>
    </Grid>
</UserControl>
