<UserControl x:Class="PresentationLayer.View.Subviews.Sidebar.ToursListItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PresentationLayer.View.Subviews.Sidebar"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid VerticalAlignment="Center" Margin="0, 5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <!-- Name Column -->
        <TextBlock Grid.Column="0" Text="{Binding Name}" FontSize="15" VerticalAlignment="Center" Margin="5, 0"/>

        <Button Grid.Column="1" Content="Edit" FontSize="14" Command="{Binding ModifyCommand}" Padding="10, 2">
            <Button.Style>
                <Style TargetType="Button">
                    <!-- Flat blue color -->
                    <Setter Property="Foreground" Value="{DynamicResource BorderDarkBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
                    <!-- White text -->
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border 
                                    Background="Transparent"
                                    CornerRadius="4"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    Padding="{TemplateBinding Padding}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <!-- Hover Effect -->
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseOverBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource ControlMouseOverBrush}"/>
                                        <!-- Slightly darker blue -->
                                    </Trigger>
                                    <!-- Pressed Effect -->
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="#1f618d"/>
                                        <!-- Even darker blue -->
                                    </Trigger>
                                    <!-- Disabled Effect -->
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="#bdc3c7"/>
                                        <!-- Gray when disabled -->
                                        <Setter Property="Foreground" Value="#7f8c8d"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Button Grid.Column="2" Content="Report" FontSize="14" Command="{Binding CreateReport}" Padding="10, 2" Margin="5 0 0 0">
            <Button.Style>
                <Style TargetType="Button">
                    <!-- Flat blue color -->
                    <Setter Property="Foreground" Value="{DynamicResource BorderDarkBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
                    <!-- White text -->
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border 
                    Background="Transparent"
                    CornerRadius="4"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1"
                    Padding="{TemplateBinding Padding}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <!-- Hover Effect -->
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseOverBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource ControlMouseOverBrush}"/>
                                        <!-- Slightly darker blue -->
                                    </Trigger>
                                    <!-- Pressed Effect -->
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="#1f618d"/>
                                        <!-- Even darker blue -->
                                    </Trigger>
                                    <!-- Disabled Effect -->
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="#bdc3c7"/>
                                        <!-- Gray when disabled -->
                                        <Setter Property="Foreground" Value="#7f8c8d"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>


    </Grid>
</UserControl>
